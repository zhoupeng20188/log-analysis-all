package com.zp.protobuf;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Election.proto

public final class ElectionPOJO {
  private ElectionPOJO() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ElectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Election)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * int32对应java中的int型，1表示属性序号，不是值
     * </pre>
     *
     * <code>int32 term = 1;</code>
     * @return The term.
     */
    int getTerm();

    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>int32 type = 2;</code>
     * @return The type.
     */
    int getType();

    /**
     * <pre>
     * 消息index
     * </pre>
     *
     * <code>int32 index = 3;</code>
     * @return The index.
     */
    int getIndex();

    /**
     * <pre>
     * 选举的轮次
     * </pre>
     *
     * <code>int32 ElectionId = 4;</code>
     * @return The electionId.
     */
    int getElectionId();

    /**
     * <pre>
     * 投票结果，1：通过，0：不通过
     * </pre>
     *
     * <code>int32 voteResult = 5;</code>
     * @return The voteResult.
     */
    int getVoteResult();

    /**
     * <pre>
     * 正在连接的客户端的server端口
     * </pre>
     *
     * <code>int32 port = 6;</code>
     * @return The port.
     */
    int getPort();

    /**
     * <pre>
     * 内容
     * </pre>
     *
     * <code>string content = 7;</code>
     * @return The content.
     */
    String getContent();
    /**
     * <pre>
     * 内容
     * </pre>
     *
     * <code>string content = 7;</code>
     * @return The bytes for content.
     */
    com.google.protobuf.ByteString
        getContentBytes();

    /**
     * <code>string projectId = 8;</code>
     * @return The projectId.
     */
    String getProjectId();
    /**
     * <code>string projectId = 8;</code>
     * @return The bytes for projectId.
     */
    com.google.protobuf.ByteString
        getProjectIdBytes();

    /**
     * <code>bytes indexMapLog = 9;</code>
     * @return The indexMapLog.
     */
    com.google.protobuf.ByteString getIndexMapLog();

    /**
     * <code>bytes msgMapLog = 10;</code>
     * @return The msgMapLog.
     */
    com.google.protobuf.ByteString getMsgMapLog();

    /**
     * <pre>
     * 同步日志用，key为projectId，value为commitedIndex
     * </pre>
     *
     * <code>map&lt;string, int32&gt; msgMap = 11;</code>
     */
    int getMsgMapCount();
    /**
     * <pre>
     * 同步日志用，key为projectId，value为commitedIndex
     * </pre>
     *
     * <code>map&lt;string, int32&gt; msgMap = 11;</code>
     */
    boolean containsMsgMap(
            String key);
    /**
     * Use {@link #getMsgMapMap()} instead.
     */
    @Deprecated
    java.util.Map<String, Integer>
    getMsgMap();
    /**
     * <pre>
     * 同步日志用，key为projectId，value为commitedIndex
     * </pre>
     *
     * <code>map&lt;string, int32&gt; msgMap = 11;</code>
     */
    java.util.Map<String, Integer>
    getMsgMapMap();
    /**
     * <pre>
     * 同步日志用，key为projectId，value为commitedIndex
     * </pre>
     *
     * <code>map&lt;string, int32&gt; msgMap = 11;</code>
     */

    int getMsgMapOrDefault(
            String key,
            int defaultValue);
    /**
     * <pre>
     * 同步日志用，key为projectId，value为commitedIndex
     * </pre>
     *
     * <code>map&lt;string, int32&gt; msgMap = 11;</code>
     */

    int getMsgMapOrThrow(
            String key);

    /**
     * <pre>
     * key为projectId，value为各projectId日志中需要传输的增量的字节数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
     */
    int getLogCopyIndexMapCount();
    /**
     * <pre>
     * key为projectId，value为各projectId日志中需要传输的增量的字节数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
     */
    boolean containsLogCopyIndexMap(
            String key);
    /**
     * Use {@link #getLogCopyIndexMapMap()} instead.
     */
    @Deprecated
    java.util.Map<String, Integer>
    getLogCopyIndexMap();
    /**
     * <pre>
     * key为projectId，value为各projectId日志中需要传输的增量的字节数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
     */
    java.util.Map<String, Integer>
    getLogCopyIndexMapMap();
    /**
     * <pre>
     * key为projectId，value为各projectId日志中需要传输的增量的字节数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
     */

    int getLogCopyIndexMapOrDefault(
            String key,
            int defaultValue);
    /**
     * <pre>
     * key为projectId，value为各projectId日志中需要传输的增量的字节数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
     */

    int getLogCopyIndexMapOrThrow(
            String key);

    /**
     * <pre>
     * 所有projectId需要传输的增加的字节数组
     * </pre>
     *
     * <code>bytes logCopyBytes = 13;</code>
     * @return The logCopyBytes.
     */
    com.google.protobuf.ByteString getLogCopyBytes();

    /**
     * <pre>
     * 对方是否是leader
     * </pre>
     *
     * <code>bool isLeader = 14;</code>
     * @return The isLeader.
     */
    boolean getIsLeader();
  }
  /**
   * <pre>
   * protobuf使用message管理数据
   * </pre>
   *
   * Protobuf type {@code Election}
   */
  public static final class Election extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Election)
      ElectionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Election.newBuilder() to construct.
    private Election(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Election() {
      content_ = "";
      projectId_ = "";
      indexMapLog_ = com.google.protobuf.ByteString.EMPTY;
      msgMapLog_ = com.google.protobuf.ByteString.EMPTY;
      logCopyBytes_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Election();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Election(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              term_ = input.readInt32();
              break;
            }
            case 16: {

              type_ = input.readInt32();
              break;
            }
            case 24: {

              index_ = input.readInt32();
              break;
            }
            case 32: {

              electionId_ = input.readInt32();
              break;
            }
            case 40: {

              voteResult_ = input.readInt32();
              break;
            }
            case 48: {

              port_ = input.readInt32();
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              content_ = s;
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              projectId_ = s;
              break;
            }
            case 74: {

              indexMapLog_ = input.readBytes();
              break;
            }
            case 82: {

              msgMapLog_ = input.readBytes();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                msgMap_ = com.google.protobuf.MapField.newMapField(
                    MsgMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<String, Integer>
              msgMap__ = input.readMessage(
                  MsgMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              msgMap_.getMutableMap().put(
                  msgMap__.getKey(), msgMap__.getValue());
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                logCopyIndexMap_ = com.google.protobuf.MapField.newMapField(
                    LogCopyIndexMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<String, Integer>
              logCopyIndexMap__ = input.readMessage(
                  LogCopyIndexMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              logCopyIndexMap_.getMutableMap().put(
                  logCopyIndexMap__.getKey(), logCopyIndexMap__.getValue());
              break;
            }
            case 106: {

              logCopyBytes_ = input.readBytes();
              break;
            }
            case 112: {

              isLeader_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ElectionPOJO.internal_static_Election_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 11:
          return internalGetMsgMap();
        case 12:
          return internalGetLogCopyIndexMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ElectionPOJO.internal_static_Election_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Election.class, Builder.class);
    }

    public static final int TERM_FIELD_NUMBER = 1;
    private int term_;
    /**
     * <pre>
     * int32对应java中的int型，1表示属性序号，不是值
     * </pre>
     *
     * <code>int32 term = 1;</code>
     * @return The term.
     */
    @Override
    public int getTerm() {
      return term_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     * 消息类型
     * </pre>
     *
     * <code>int32 type = 2;</code>
     * @return The type.
     */
    @Override
    public int getType() {
      return type_;
    }

    public static final int INDEX_FIELD_NUMBER = 3;
    private int index_;
    /**
     * <pre>
     * 消息index
     * </pre>
     *
     * <code>int32 index = 3;</code>
     * @return The index.
     */
    @Override
    public int getIndex() {
      return index_;
    }

    public static final int ELECTIONID_FIELD_NUMBER = 4;
    private int electionId_;
    /**
     * <pre>
     * 选举的轮次
     * </pre>
     *
     * <code>int32 ElectionId = 4;</code>
     * @return The electionId.
     */
    @Override
    public int getElectionId() {
      return electionId_;
    }

    public static final int VOTERESULT_FIELD_NUMBER = 5;
    private int voteResult_;
    /**
     * <pre>
     * 投票结果，1：通过，0：不通过
     * </pre>
     *
     * <code>int32 voteResult = 5;</code>
     * @return The voteResult.
     */
    @Override
    public int getVoteResult() {
      return voteResult_;
    }

    public static final int PORT_FIELD_NUMBER = 6;
    private int port_;
    /**
     * <pre>
     * 正在连接的客户端的server端口
     * </pre>
     *
     * <code>int32 port = 6;</code>
     * @return The port.
     */
    @Override
    public int getPort() {
      return port_;
    }

    public static final int CONTENT_FIELD_NUMBER = 7;
    private volatile Object content_;
    /**
     * <pre>
     * 内容
     * </pre>
     *
     * <code>string content = 7;</code>
     * @return The content.
     */
    @Override
    public String getContent() {
      Object ref = content_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        content_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 内容
     * </pre>
     *
     * <code>string content = 7;</code>
     * @return The bytes for content.
     */
    @Override
    public com.google.protobuf.ByteString
        getContentBytes() {
      Object ref = content_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROJECTID_FIELD_NUMBER = 8;
    private volatile Object projectId_;
    /**
     * <code>string projectId = 8;</code>
     * @return The projectId.
     */
    @Override
    public String getProjectId() {
      Object ref = projectId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        projectId_ = s;
        return s;
      }
    }
    /**
     * <code>string projectId = 8;</code>
     * @return The bytes for projectId.
     */
    @Override
    public com.google.protobuf.ByteString
        getProjectIdBytes() {
      Object ref = projectId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        projectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEXMAPLOG_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString indexMapLog_;
    /**
     * <code>bytes indexMapLog = 9;</code>
     * @return The indexMapLog.
     */
    @Override
    public com.google.protobuf.ByteString getIndexMapLog() {
      return indexMapLog_;
    }

    public static final int MSGMAPLOG_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString msgMapLog_;
    /**
     * <code>bytes msgMapLog = 10;</code>
     * @return The msgMapLog.
     */
    @Override
    public com.google.protobuf.ByteString getMsgMapLog() {
      return msgMapLog_;
    }

    public static final int MSGMAP_FIELD_NUMBER = 11;
    private static final class MsgMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, Integer>newDefaultInstance(
                  ElectionPOJO.internal_static_Election_MsgMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        String, Integer> msgMap_;
    private com.google.protobuf.MapField<String, Integer>
    internalGetMsgMap() {
      if (msgMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MsgMapDefaultEntryHolder.defaultEntry);
      }
      return msgMap_;
    }

    public int getMsgMapCount() {
      return internalGetMsgMap().getMap().size();
    }
    /**
     * <pre>
     * 同步日志用，key为projectId，value为commitedIndex
     * </pre>
     *
     * <code>map&lt;string, int32&gt; msgMap = 11;</code>
     */

    @Override
    public boolean containsMsgMap(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetMsgMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMsgMapMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, Integer> getMsgMap() {
      return getMsgMapMap();
    }
    /**
     * <pre>
     * 同步日志用，key为projectId，value为commitedIndex
     * </pre>
     *
     * <code>map&lt;string, int32&gt; msgMap = 11;</code>
     */
    @Override

    public java.util.Map<String, Integer> getMsgMapMap() {
      return internalGetMsgMap().getMap();
    }
    /**
     * <pre>
     * 同步日志用，key为projectId，value为commitedIndex
     * </pre>
     *
     * <code>map&lt;string, int32&gt; msgMap = 11;</code>
     */
    @Override

    public int getMsgMapOrDefault(
        String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          internalGetMsgMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * 同步日志用，key为projectId，value为commitedIndex
     * </pre>
     *
     * <code>map&lt;string, int32&gt; msgMap = 11;</code>
     */
    @Override

    public int getMsgMapOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          internalGetMsgMap().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LOGCOPYINDEXMAP_FIELD_NUMBER = 12;
    private static final class LogCopyIndexMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, Integer>newDefaultInstance(
                  ElectionPOJO.internal_static_Election_LogCopyIndexMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        String, Integer> logCopyIndexMap_;
    private com.google.protobuf.MapField<String, Integer>
    internalGetLogCopyIndexMap() {
      if (logCopyIndexMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LogCopyIndexMapDefaultEntryHolder.defaultEntry);
      }
      return logCopyIndexMap_;
    }

    public int getLogCopyIndexMapCount() {
      return internalGetLogCopyIndexMap().getMap().size();
    }
    /**
     * <pre>
     * key为projectId，value为各projectId日志中需要传输的增量的字节数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
     */

    @Override
    public boolean containsLogCopyIndexMap(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetLogCopyIndexMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLogCopyIndexMapMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, Integer> getLogCopyIndexMap() {
      return getLogCopyIndexMapMap();
    }
    /**
     * <pre>
     * key为projectId，value为各projectId日志中需要传输的增量的字节数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
     */
    @Override

    public java.util.Map<String, Integer> getLogCopyIndexMapMap() {
      return internalGetLogCopyIndexMap().getMap();
    }
    /**
     * <pre>
     * key为projectId，value为各projectId日志中需要传输的增量的字节数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
     */
    @Override

    public int getLogCopyIndexMapOrDefault(
        String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          internalGetLogCopyIndexMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * key为projectId，value为各projectId日志中需要传输的增量的字节数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
     */
    @Override

    public int getLogCopyIndexMapOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, Integer> map =
          internalGetLogCopyIndexMap().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LOGCOPYBYTES_FIELD_NUMBER = 13;
    private com.google.protobuf.ByteString logCopyBytes_;
    /**
     * <pre>
     * 所有projectId需要传输的增加的字节数组
     * </pre>
     *
     * <code>bytes logCopyBytes = 13;</code>
     * @return The logCopyBytes.
     */
    @Override
    public com.google.protobuf.ByteString getLogCopyBytes() {
      return logCopyBytes_;
    }

    public static final int ISLEADER_FIELD_NUMBER = 14;
    private boolean isLeader_;
    /**
     * <pre>
     * 对方是否是leader
     * </pre>
     *
     * <code>bool isLeader = 14;</code>
     * @return The isLeader.
     */
    @Override
    public boolean getIsLeader() {
      return isLeader_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (term_ != 0) {
        output.writeInt32(1, term_);
      }
      if (type_ != 0) {
        output.writeInt32(2, type_);
      }
      if (index_ != 0) {
        output.writeInt32(3, index_);
      }
      if (electionId_ != 0) {
        output.writeInt32(4, electionId_);
      }
      if (voteResult_ != 0) {
        output.writeInt32(5, voteResult_);
      }
      if (port_ != 0) {
        output.writeInt32(6, port_);
      }
      if (!getContentBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, content_);
      }
      if (!getProjectIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, projectId_);
      }
      if (!indexMapLog_.isEmpty()) {
        output.writeBytes(9, indexMapLog_);
      }
      if (!msgMapLog_.isEmpty()) {
        output.writeBytes(10, msgMapLog_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMsgMap(),
          MsgMapDefaultEntryHolder.defaultEntry,
          11);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLogCopyIndexMap(),
          LogCopyIndexMapDefaultEntryHolder.defaultEntry,
          12);
      if (!logCopyBytes_.isEmpty()) {
        output.writeBytes(13, logCopyBytes_);
      }
      if (isLeader_ != false) {
        output.writeBool(14, isLeader_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (term_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, term_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, index_);
      }
      if (electionId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, electionId_);
      }
      if (voteResult_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, voteResult_);
      }
      if (port_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, port_);
      }
      if (!getContentBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, content_);
      }
      if (!getProjectIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, projectId_);
      }
      if (!indexMapLog_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, indexMapLog_);
      }
      if (!msgMapLog_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, msgMapLog_);
      }
      for (java.util.Map.Entry<String, Integer> entry
           : internalGetMsgMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, Integer>
        msgMap__ = MsgMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, msgMap__);
      }
      for (java.util.Map.Entry<String, Integer> entry
           : internalGetLogCopyIndexMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, Integer>
        logCopyIndexMap__ = LogCopyIndexMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, logCopyIndexMap__);
      }
      if (!logCopyBytes_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, logCopyBytes_);
      }
      if (isLeader_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, isLeader_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Election)) {
        return super.equals(obj);
      }
      Election other = (Election) obj;

      if (getTerm()
          != other.getTerm()) return false;
      if (getType()
          != other.getType()) return false;
      if (getIndex()
          != other.getIndex()) return false;
      if (getElectionId()
          != other.getElectionId()) return false;
      if (getVoteResult()
          != other.getVoteResult()) return false;
      if (getPort()
          != other.getPort()) return false;
      if (!getContent()
          .equals(other.getContent())) return false;
      if (!getProjectId()
          .equals(other.getProjectId())) return false;
      if (!getIndexMapLog()
          .equals(other.getIndexMapLog())) return false;
      if (!getMsgMapLog()
          .equals(other.getMsgMapLog())) return false;
      if (!internalGetMsgMap().equals(
          other.internalGetMsgMap())) return false;
      if (!internalGetLogCopyIndexMap().equals(
          other.internalGetLogCopyIndexMap())) return false;
      if (!getLogCopyBytes()
          .equals(other.getLogCopyBytes())) return false;
      if (getIsLeader()
          != other.getIsLeader()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TERM_FIELD_NUMBER;
      hash = (53 * hash) + getTerm();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (37 * hash) + ELECTIONID_FIELD_NUMBER;
      hash = (53 * hash) + getElectionId();
      hash = (37 * hash) + VOTERESULT_FIELD_NUMBER;
      hash = (53 * hash) + getVoteResult();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + getPort();
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (37 * hash) + PROJECTID_FIELD_NUMBER;
      hash = (53 * hash) + getProjectId().hashCode();
      hash = (37 * hash) + INDEXMAPLOG_FIELD_NUMBER;
      hash = (53 * hash) + getIndexMapLog().hashCode();
      hash = (37 * hash) + MSGMAPLOG_FIELD_NUMBER;
      hash = (53 * hash) + getMsgMapLog().hashCode();
      if (!internalGetMsgMap().getMap().isEmpty()) {
        hash = (37 * hash) + MSGMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMsgMap().hashCode();
      }
      if (!internalGetLogCopyIndexMap().getMap().isEmpty()) {
        hash = (37 * hash) + LOGCOPYINDEXMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLogCopyIndexMap().hashCode();
      }
      hash = (37 * hash) + LOGCOPYBYTES_FIELD_NUMBER;
      hash = (53 * hash) + getLogCopyBytes().hashCode();
      hash = (37 * hash) + ISLEADER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsLeader());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Election parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Election parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Election parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Election parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Election parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Election parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Election parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Election parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Election parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Election parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Election parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Election parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Election prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * protobuf使用message管理数据
     * </pre>
     *
     * Protobuf type {@code Election}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Election)
        ElectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ElectionPOJO.internal_static_Election_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetMsgMap();
          case 12:
            return internalGetLogCopyIndexMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetMutableMsgMap();
          case 12:
            return internalGetMutableLogCopyIndexMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ElectionPOJO.internal_static_Election_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Election.class, Builder.class);
      }

      // Construct using ElectionPOJO.Election.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        term_ = 0;

        type_ = 0;

        index_ = 0;

        electionId_ = 0;

        voteResult_ = 0;

        port_ = 0;

        content_ = "";

        projectId_ = "";

        indexMapLog_ = com.google.protobuf.ByteString.EMPTY;

        msgMapLog_ = com.google.protobuf.ByteString.EMPTY;

        internalGetMutableMsgMap().clear();
        internalGetMutableLogCopyIndexMap().clear();
        logCopyBytes_ = com.google.protobuf.ByteString.EMPTY;

        isLeader_ = false;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ElectionPOJO.internal_static_Election_descriptor;
      }

      @Override
      public Election getDefaultInstanceForType() {
        return Election.getDefaultInstance();
      }

      @Override
      public Election build() {
        Election result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Election buildPartial() {
        Election result = new Election(this);
        int from_bitField0_ = bitField0_;
        result.term_ = term_;
        result.type_ = type_;
        result.index_ = index_;
        result.electionId_ = electionId_;
        result.voteResult_ = voteResult_;
        result.port_ = port_;
        result.content_ = content_;
        result.projectId_ = projectId_;
        result.indexMapLog_ = indexMapLog_;
        result.msgMapLog_ = msgMapLog_;
        result.msgMap_ = internalGetMsgMap();
        result.msgMap_.makeImmutable();
        result.logCopyIndexMap_ = internalGetLogCopyIndexMap();
        result.logCopyIndexMap_.makeImmutable();
        result.logCopyBytes_ = logCopyBytes_;
        result.isLeader_ = isLeader_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Election) {
          return mergeFrom((Election)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Election other) {
        if (other == Election.getDefaultInstance()) return this;
        if (other.getTerm() != 0) {
          setTerm(other.getTerm());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (other.getElectionId() != 0) {
          setElectionId(other.getElectionId());
        }
        if (other.getVoteResult() != 0) {
          setVoteResult(other.getVoteResult());
        }
        if (other.getPort() != 0) {
          setPort(other.getPort());
        }
        if (!other.getContent().isEmpty()) {
          content_ = other.content_;
          onChanged();
        }
        if (!other.getProjectId().isEmpty()) {
          projectId_ = other.projectId_;
          onChanged();
        }
        if (other.getIndexMapLog() != com.google.protobuf.ByteString.EMPTY) {
          setIndexMapLog(other.getIndexMapLog());
        }
        if (other.getMsgMapLog() != com.google.protobuf.ByteString.EMPTY) {
          setMsgMapLog(other.getMsgMapLog());
        }
        internalGetMutableMsgMap().mergeFrom(
            other.internalGetMsgMap());
        internalGetMutableLogCopyIndexMap().mergeFrom(
            other.internalGetLogCopyIndexMap());
        if (other.getLogCopyBytes() != com.google.protobuf.ByteString.EMPTY) {
          setLogCopyBytes(other.getLogCopyBytes());
        }
        if (other.getIsLeader() != false) {
          setIsLeader(other.getIsLeader());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Election parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Election) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int term_ ;
      /**
       * <pre>
       * int32对应java中的int型，1表示属性序号，不是值
       * </pre>
       *
       * <code>int32 term = 1;</code>
       * @return The term.
       */
      @Override
      public int getTerm() {
        return term_;
      }
      /**
       * <pre>
       * int32对应java中的int型，1表示属性序号，不是值
       * </pre>
       *
       * <code>int32 term = 1;</code>
       * @param value The term to set.
       * @return This builder for chaining.
       */
      public Builder setTerm(int value) {
        
        term_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * int32对应java中的int型，1表示属性序号，不是值
       * </pre>
       *
       * <code>int32 term = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTerm() {
        
        term_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>int32 type = 2;</code>
       * @return The type.
       */
      @Override
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>int32 type = 2;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息类型
       * </pre>
       *
       * <code>int32 type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       * 消息index
       * </pre>
       *
       * <code>int32 index = 3;</code>
       * @return The index.
       */
      @Override
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       * 消息index
       * </pre>
       *
       * <code>int32 index = 3;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息index
       * </pre>
       *
       * <code>int32 index = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }

      private int electionId_ ;
      /**
       * <pre>
       * 选举的轮次
       * </pre>
       *
       * <code>int32 ElectionId = 4;</code>
       * @return The electionId.
       */
      @Override
      public int getElectionId() {
        return electionId_;
      }
      /**
       * <pre>
       * 选举的轮次
       * </pre>
       *
       * <code>int32 ElectionId = 4;</code>
       * @param value The electionId to set.
       * @return This builder for chaining.
       */
      public Builder setElectionId(int value) {
        
        electionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 选举的轮次
       * </pre>
       *
       * <code>int32 ElectionId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearElectionId() {
        
        electionId_ = 0;
        onChanged();
        return this;
      }

      private int voteResult_ ;
      /**
       * <pre>
       * 投票结果，1：通过，0：不通过
       * </pre>
       *
       * <code>int32 voteResult = 5;</code>
       * @return The voteResult.
       */
      @Override
      public int getVoteResult() {
        return voteResult_;
      }
      /**
       * <pre>
       * 投票结果，1：通过，0：不通过
       * </pre>
       *
       * <code>int32 voteResult = 5;</code>
       * @param value The voteResult to set.
       * @return This builder for chaining.
       */
      public Builder setVoteResult(int value) {
        
        voteResult_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 投票结果，1：通过，0：不通过
       * </pre>
       *
       * <code>int32 voteResult = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVoteResult() {
        
        voteResult_ = 0;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <pre>
       * 正在连接的客户端的server端口
       * </pre>
       *
       * <code>int32 port = 6;</code>
       * @return The port.
       */
      @Override
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * 正在连接的客户端的server端口
       * </pre>
       *
       * <code>int32 port = 6;</code>
       * @param value The port to set.
       * @return This builder for chaining.
       */
      public Builder setPort(int value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 正在连接的客户端的server端口
       * </pre>
       *
       * <code>int32 port = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPort() {
        
        port_ = 0;
        onChanged();
        return this;
      }

      private Object content_ = "";
      /**
       * <pre>
       * 内容
       * </pre>
       *
       * <code>string content = 7;</code>
       * @return The content.
       */
      public String getContent() {
        Object ref = content_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 内容
       * </pre>
       *
       * <code>string content = 7;</code>
       * @return The bytes for content.
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 内容
       * </pre>
       *
       * <code>string content = 7;</code>
       * @param value The content to set.
       * @return This builder for chaining.
       */
      public Builder setContent(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 内容
       * </pre>
       *
       * <code>string content = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 内容
       * </pre>
       *
       * <code>string content = 7;</code>
       * @param value The bytes for content to set.
       * @return This builder for chaining.
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        content_ = value;
        onChanged();
        return this;
      }

      private Object projectId_ = "";
      /**
       * <code>string projectId = 8;</code>
       * @return The projectId.
       */
      public String getProjectId() {
        Object ref = projectId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          projectId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string projectId = 8;</code>
       * @return The bytes for projectId.
       */
      public com.google.protobuf.ByteString
          getProjectIdBytes() {
        Object ref = projectId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          projectId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string projectId = 8;</code>
       * @param value The projectId to set.
       * @return This builder for chaining.
       */
      public Builder setProjectId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        projectId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string projectId = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearProjectId() {
        
        projectId_ = getDefaultInstance().getProjectId();
        onChanged();
        return this;
      }
      /**
       * <code>string projectId = 8;</code>
       * @param value The bytes for projectId to set.
       * @return This builder for chaining.
       */
      public Builder setProjectIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        projectId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString indexMapLog_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes indexMapLog = 9;</code>
       * @return The indexMapLog.
       */
      @Override
      public com.google.protobuf.ByteString getIndexMapLog() {
        return indexMapLog_;
      }
      /**
       * <code>bytes indexMapLog = 9;</code>
       * @param value The indexMapLog to set.
       * @return This builder for chaining.
       */
      public Builder setIndexMapLog(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        indexMapLog_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes indexMapLog = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndexMapLog() {
        
        indexMapLog_ = getDefaultInstance().getIndexMapLog();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString msgMapLog_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes msgMapLog = 10;</code>
       * @return The msgMapLog.
       */
      @Override
      public com.google.protobuf.ByteString getMsgMapLog() {
        return msgMapLog_;
      }
      /**
       * <code>bytes msgMapLog = 10;</code>
       * @param value The msgMapLog to set.
       * @return This builder for chaining.
       */
      public Builder setMsgMapLog(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        msgMapLog_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes msgMapLog = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearMsgMapLog() {
        
        msgMapLog_ = getDefaultInstance().getMsgMapLog();
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          String, Integer> msgMap_;
      private com.google.protobuf.MapField<String, Integer>
      internalGetMsgMap() {
        if (msgMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MsgMapDefaultEntryHolder.defaultEntry);
        }
        return msgMap_;
      }
      private com.google.protobuf.MapField<String, Integer>
      internalGetMutableMsgMap() {
        onChanged();;
        if (msgMap_ == null) {
          msgMap_ = com.google.protobuf.MapField.newMapField(
              MsgMapDefaultEntryHolder.defaultEntry);
        }
        if (!msgMap_.isMutable()) {
          msgMap_ = msgMap_.copy();
        }
        return msgMap_;
      }

      public int getMsgMapCount() {
        return internalGetMsgMap().getMap().size();
      }
      /**
       * <pre>
       * 同步日志用，key为projectId，value为commitedIndex
       * </pre>
       *
       * <code>map&lt;string, int32&gt; msgMap = 11;</code>
       */

      @Override
      public boolean containsMsgMap(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetMsgMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMsgMapMap()} instead.
       */
      @Override
      @Deprecated
      public java.util.Map<String, Integer> getMsgMap() {
        return getMsgMapMap();
      }
      /**
       * <pre>
       * 同步日志用，key为projectId，value为commitedIndex
       * </pre>
       *
       * <code>map&lt;string, int32&gt; msgMap = 11;</code>
       */
      @Override

      public java.util.Map<String, Integer> getMsgMapMap() {
        return internalGetMsgMap().getMap();
      }
      /**
       * <pre>
       * 同步日志用，key为projectId，value为commitedIndex
       * </pre>
       *
       * <code>map&lt;string, int32&gt; msgMap = 11;</code>
       */
      @Override

      public int getMsgMapOrDefault(
          String key,
          int defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Integer> map =
            internalGetMsgMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * 同步日志用，key为projectId，value为commitedIndex
       * </pre>
       *
       * <code>map&lt;string, int32&gt; msgMap = 11;</code>
       */
      @Override

      public int getMsgMapOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Integer> map =
            internalGetMsgMap().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMsgMap() {
        internalGetMutableMsgMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * 同步日志用，key为projectId，value为commitedIndex
       * </pre>
       *
       * <code>map&lt;string, int32&gt; msgMap = 11;</code>
       */

      public Builder removeMsgMap(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableMsgMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, Integer>
      getMutableMsgMap() {
        return internalGetMutableMsgMap().getMutableMap();
      }
      /**
       * <pre>
       * 同步日志用，key为projectId，value为commitedIndex
       * </pre>
       *
       * <code>map&lt;string, int32&gt; msgMap = 11;</code>
       */
      public Builder putMsgMap(
          String key,
          int value) {
        if (key == null) { throw new NullPointerException(); }
        
        internalGetMutableMsgMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * 同步日志用，key为projectId，value为commitedIndex
       * </pre>
       *
       * <code>map&lt;string, int32&gt; msgMap = 11;</code>
       */

      public Builder putAllMsgMap(
          java.util.Map<String, Integer> values) {
        internalGetMutableMsgMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          String, Integer> logCopyIndexMap_;
      private com.google.protobuf.MapField<String, Integer>
      internalGetLogCopyIndexMap() {
        if (logCopyIndexMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LogCopyIndexMapDefaultEntryHolder.defaultEntry);
        }
        return logCopyIndexMap_;
      }
      private com.google.protobuf.MapField<String, Integer>
      internalGetMutableLogCopyIndexMap() {
        onChanged();;
        if (logCopyIndexMap_ == null) {
          logCopyIndexMap_ = com.google.protobuf.MapField.newMapField(
              LogCopyIndexMapDefaultEntryHolder.defaultEntry);
        }
        if (!logCopyIndexMap_.isMutable()) {
          logCopyIndexMap_ = logCopyIndexMap_.copy();
        }
        return logCopyIndexMap_;
      }

      public int getLogCopyIndexMapCount() {
        return internalGetLogCopyIndexMap().getMap().size();
      }
      /**
       * <pre>
       * key为projectId，value为各projectId日志中需要传输的增量的字节数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
       */

      @Override
      public boolean containsLogCopyIndexMap(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetLogCopyIndexMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLogCopyIndexMapMap()} instead.
       */
      @Override
      @Deprecated
      public java.util.Map<String, Integer> getLogCopyIndexMap() {
        return getLogCopyIndexMapMap();
      }
      /**
       * <pre>
       * key为projectId，value为各projectId日志中需要传输的增量的字节数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
       */
      @Override

      public java.util.Map<String, Integer> getLogCopyIndexMapMap() {
        return internalGetLogCopyIndexMap().getMap();
      }
      /**
       * <pre>
       * key为projectId，value为各projectId日志中需要传输的增量的字节数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
       */
      @Override

      public int getLogCopyIndexMapOrDefault(
          String key,
          int defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Integer> map =
            internalGetLogCopyIndexMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * key为projectId，value为各projectId日志中需要传输的增量的字节数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
       */
      @Override

      public int getLogCopyIndexMapOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, Integer> map =
            internalGetLogCopyIndexMap().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLogCopyIndexMap() {
        internalGetMutableLogCopyIndexMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * key为projectId，value为各projectId日志中需要传输的增量的字节数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
       */

      public Builder removeLogCopyIndexMap(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableLogCopyIndexMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, Integer>
      getMutableLogCopyIndexMap() {
        return internalGetMutableLogCopyIndexMap().getMutableMap();
      }
      /**
       * <pre>
       * key为projectId，value为各projectId日志中需要传输的增量的字节数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
       */
      public Builder putLogCopyIndexMap(
          String key,
          int value) {
        if (key == null) { throw new NullPointerException(); }
        
        internalGetMutableLogCopyIndexMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * key为projectId，value为各projectId日志中需要传输的增量的字节数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; logCopyIndexMap = 12;</code>
       */

      public Builder putAllLogCopyIndexMap(
          java.util.Map<String, Integer> values) {
        internalGetMutableLogCopyIndexMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.ByteString logCopyBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * 所有projectId需要传输的增加的字节数组
       * </pre>
       *
       * <code>bytes logCopyBytes = 13;</code>
       * @return The logCopyBytes.
       */
      @Override
      public com.google.protobuf.ByteString getLogCopyBytes() {
        return logCopyBytes_;
      }
      /**
       * <pre>
       * 所有projectId需要传输的增加的字节数组
       * </pre>
       *
       * <code>bytes logCopyBytes = 13;</code>
       * @param value The logCopyBytes to set.
       * @return This builder for chaining.
       */
      public Builder setLogCopyBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        logCopyBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 所有projectId需要传输的增加的字节数组
       * </pre>
       *
       * <code>bytes logCopyBytes = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogCopyBytes() {
        
        logCopyBytes_ = getDefaultInstance().getLogCopyBytes();
        onChanged();
        return this;
      }

      private boolean isLeader_ ;
      /**
       * <pre>
       * 对方是否是leader
       * </pre>
       *
       * <code>bool isLeader = 14;</code>
       * @return The isLeader.
       */
      @Override
      public boolean getIsLeader() {
        return isLeader_;
      }
      /**
       * <pre>
       * 对方是否是leader
       * </pre>
       *
       * <code>bool isLeader = 14;</code>
       * @param value The isLeader to set.
       * @return This builder for chaining.
       */
      public Builder setIsLeader(boolean value) {
        
        isLeader_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 对方是否是leader
       * </pre>
       *
       * <code>bool isLeader = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsLeader() {
        
        isLeader_ = false;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Election)
    }

    // @@protoc_insertion_point(class_scope:Election)
    private static final Election DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Election();
    }

    public static Election getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Election>
        PARSER = new com.google.protobuf.AbstractParser<Election>() {
      @Override
      public Election parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Election(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Election> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Election> getParserForType() {
      return PARSER;
    }

    @Override
    public Election getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Election_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Election_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Election_MsgMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Election_MsgMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Election_LogCopyIndexMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Election_LogCopyIndexMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\016Election.proto\"\246\003\n\010Election\022\014\n\004term\030\001 " +
      "\001(\005\022\014\n\004type\030\002 \001(\005\022\r\n\005index\030\003 \001(\005\022\022\n\nElec" +
      "tionId\030\004 \001(\005\022\022\n\nvoteResult\030\005 \001(\005\022\014\n\004port" +
      "\030\006 \001(\005\022\017\n\007content\030\007 \001(\t\022\021\n\tprojectId\030\010 \001" +
      "(\t\022\023\n\013indexMapLog\030\t \001(\014\022\021\n\tmsgMapLog\030\n \001" +
      "(\014\022%\n\006msgMap\030\013 \003(\0132\025.Election.MsgMapEntr" +
      "y\0227\n\017logCopyIndexMap\030\014 \003(\0132\036.Election.Lo" +
      "gCopyIndexMapEntry\022\024\n\014logCopyBytes\030\r \001(\014" +
      "\022\020\n\010isLeader\030\016 \001(\010\032-\n\013MsgMapEntry\022\013\n\003key" +
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\0326\n\024LogCopyInde" +
      "xMapEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028" +
      "\001B\016B\014ElectionPOJOb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Election_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Election_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Election_descriptor,
        new String[] { "Term", "Type", "Index", "ElectionId", "VoteResult", "Port", "Content", "ProjectId", "IndexMapLog", "MsgMapLog", "MsgMap", "LogCopyIndexMap", "LogCopyBytes", "IsLeader", });
    internal_static_Election_MsgMapEntry_descriptor =
      internal_static_Election_descriptor.getNestedTypes().get(0);
    internal_static_Election_MsgMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Election_MsgMapEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_Election_LogCopyIndexMapEntry_descriptor =
      internal_static_Election_descriptor.getNestedTypes().get(1);
    internal_static_Election_LogCopyIndexMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Election_LogCopyIndexMapEntry_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
